===============================================================================
                  === The *nuskell* compiler package ===

usage:

  ./compile translation_scheme.nus [options] < formal.crn > dom_design.pil

nuskell is a compiler written in python2.7. The nuskell compiler translates 
formal chemical reaction networks into a domain-level specification using
a translation scheme written in the nuskell programming language.

 --verify
 --verify_wolfe
 --verify_condense
 --enumerate
 -o, --output [pil/dom/silent]


 echo "A + B => C; C + B <=> A" | ./nuskell --ts examples/soloveichick.ts --verbose --verify --print pil > test.out


===============================================================================


README written by Seung Woo Shin (lagnared@gmail.com) in September 2011, any
questions can be directed that direction.

This is the temporary README for BioCRN compiler and verifier. More information
about this project can be found at `http://thesis.library.caltech.edu/6676/'.

There are two executables in this package: `biocrn' and `verifier'.

`biocrn' is a compiler that translates the given CRN to a set of DNA molecules
using the specified translation scheme. Usage is as follows:

    ./biocrn <translation scheme file> <crn file>

For instance, one can try `./biocrn ts/soloveichik.ts crn/crn1.crn'. It will
produce two output files `crn1.dom' and `crn1.pil'. They contain the same
information in different formats. `crn1.dom' uses the domain specification
language and `crn1.pil' uses the Pepper intermediate language.

`verify' is the verifier that inspects the translation of the given CRN using
the given translation scheme. It has the same usage as `biocrn', and it will
print to the screen whether the compilation was correct. It does not produce
any output file. 

There are some sample .ts and .crn files in the directories `ts' and `crn',
respectively.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

UPDATE written by Erik Winfree (winfree@caltech.edu) in February 2013, and
questions can also be directed in that direction.

This directory now includes an additional verifier method, as described in Qing
Dong's MS Thesis
(http://www.dna.caltech.edu/DNAresearch_publications.html#QingDongThesis).

`verify' now takes an additional option `--bisimulation' that uses the new
method.  With no extra option, or with `--pathway', the original verification
method is used.  

The relevant code `crn_bisimulation_equivalence.py' was written by Qing Dong
<dong.qing.nju@gmail.com> along with minor adjustments to `verify'.

A number of new CRN examples and translation scheme examples were developed by
Erik Winfree.

Also new is a script `test_suite' that runs both methods on the sample CRNs in
the `crn' subdirectory using all the available translation schemes in the `ts'
subdirectory.  The script `test_suite_table' summarizes the results in a table.
Examine the source code for usage information.  The file `test_suite_output' is
generated by and used by these scripts.


