# Song, Garg, Mokhtar, Bui, Reif in ACS (2016)
# "Analog Compugtation by DNA Strand Displacement Circuits"
#
# Figure 9: Multiplication Gate [pm = m1 * m2]
#
#
# CRN:
#   Im1 + M1 -> Im1a [ks]
#   Im2 + M2 -> Im2a + Im2b [kf]
#   Im2a + M3 -> Gpm3 [k1]
#   Im2b + Gm4 ->  [k2]
#   Im1a + Gm4 ->  [k3]
#   Im1a + Gpm3 -> Om1 [k3]
#
#  - without the mysterious amplifier.
##   Om1 + amplifier -> (n)Om [k4]
#
# verify:
#   echo "Im1 -> Im1a; Im2 -> Im2b + Im2a; Im2a + Im1a -> Om1; Im1a ->; Im2b -> " | nuskell --readpil song2016_multiplication.pil --verify pathway bisimulation
#     => not equivalent
#

# Domain Specifications
length a  = 6
length f  = 6
length g  = 6
length h  = 6
length r  = 6

length s1 = 15
length s2 = 15
length n1 = 15
length n2 = 15
length n3 = 15
length n4 = 15
length n5 = 15
length n6 = 15
length m1 = 15
length m2 = 15

# Complex Specifications
Im1 = s1 a n1   @initial 30 nM
Im2 = s2 a n2   @initial 2 nM

Im1a = m2 g n5 h  @initial 0 nM
Im2b = n2 g n4    @initial 0 nM
Im2a = m1 r n3    @initial 0 nM
Om1 = n5 h n6     @initial 0 nM

Fm1 = f m2 g                              @initial 100 nM
Gm1 = n1( f( + m2( g( n5 h + ) ) ) ) a*   @initial 100 nM
Dm1 = n1( + f* )                          @initial 100 nM
Fm2 = g m1 r                              @initial 100 nM
Gm2 = n2( g( n4 + m1( r( n3 + ) ) ) ) a*  @initial 100 nM
Gm3 = n3( g( + n5( h( n6 + ) ) ) ) r*     @initial 100 nM
Dm3 = n3( + g* )                          @initial 100 nM
Gm4 = n2( + n5( h( + ) ) g* )             @initial 100 nM


